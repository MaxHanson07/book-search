{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sandt\\\\code\\\\booksearch\\\\client\\\\src\\\\pages\\\\Saved.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Books() {\n  _s();\n\n  // Setting our component's initial state\n  const [books, setBooks] = useState([]);\n  const [formObject, setFormObject] = useState({}); // Load all books and store them with setBooks\n\n  useEffect(() => {\n    loadBooks();\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(res => setBooks(res.data)).catch(err => console.log(err));\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(res => loadBooks()).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-6 sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Books On My List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), books.length ? /*#__PURE__*/_jsxDEV(List, {\n          children: books.map(book => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/books/\" + book._id,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [book.title, \" by \", book.author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n              onClick: () => deleteBook(book._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this)]\n          }, book._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Results to Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Books, \"UqfM0h0i9og713UvocqePx2+GPk=\");\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["C:/Users/sandt/code/booksearch/client/src/pages/Saved.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Books","books","setBooks","formObject","setFormObject","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","length","map","book","_id","title","author"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C,CAHa,CAKb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT,CANa,CAUb;;AACA,WAASA,SAAT,GAAqB;AACjBZ,IAAAA,GAAG,CAACa,QAAJ,GACKC,IADL,CACUC,GAAG,IACLN,QAAQ,CAACM,GAAG,CAACC,IAAL,CAFhB,EAIKC,KAJL,CAIWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKH;;AAAA,GAjBY,CAmBb;;AACA,WAASG,UAAT,CAAoBC,EAApB,EAAwB;AACpBtB,IAAAA,GAAG,CAACqB,UAAJ,CAAeC,EAAf,EACKR,IADL,CACUC,GAAG,IAAIH,SAAS,EAD1B,EAEKK,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACI,QAAC,GAAD;AAAA,6BAuCI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAC,YAAV;AAAA,gCACI,QAAC,SAAD;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKV,KAAK,CAACe,MAAN,gBACG,QAAC,IAAD;AAAA,oBACKf,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBACX,QAAC,QAAD;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE,YAAYA,IAAI,CAACC,GAA3B;AAAA,qCACI;AAAA,2BACKD,IAAI,CAACE,KADV,UACqBF,IAAI,CAACG,MAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,SAAD;AAAW,cAAA,OAAO,EAAE,MAAMP,UAAU,CAACI,IAAI,CAACC,GAAN;AAApC;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA,aAAeD,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADH,gBAcO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAvCJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiEH;;GA3FQnB,K;;KAAAA,K;AA8FT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\n\r\nfunction Books() {\r\n    // Setting our component's initial state\r\n    const [books, setBooks] = useState([])\r\n    const [formObject, setFormObject] = useState({})\r\n\r\n    // Load all books and store them with setBooks\r\n    useEffect(() => {\r\n        loadBooks()\r\n    }, [])\r\n\r\n    // Loads all books and sets them to books\r\n    function loadBooks() {\r\n        API.getBooks()\r\n            .then(res =>\r\n                setBooks(res.data)\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Deletes a book from the database with a given id, then reloads books from the db\r\n    function deleteBook(id) {\r\n        API.deleteBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                {/* <Col size=\"md-6\">\r\n                    <Jumbotron>\r\n                        <h1>What Books Should I Read?</h1>\r\n                    </Jumbotron>\r\n                    <form>\r\n                        <Input\r\n                            onChange={handleInputChange}\r\n                            name=\"title\"\r\n                            placeholder=\"Title (required)\"\r\n                        />\r\n                        <Input\r\n                            onChange={handleInputChange}\r\n                            name=\"author\"\r\n                            placeholder=\"Author (required)\"\r\n                        />\r\n                        <TextArea\r\n                            onChange={handleInputChange}\r\n                            name=\"description\"\r\n                            placeholder=\"Description (Optional)\"\r\n                        />\r\n                        <TextArea\r\n                            onChange={handleInputChange}\r\n                            name=\"image\"\r\n                            placeholder=\"Image (Optional)\"\r\n                        />\r\n                        <TextArea\r\n                            onChange={handleInputChange}\r\n                            name=\"link\"\r\n                            placeholder=\"Link (Optional)\"\r\n                        />\r\n                        <FormBtn\r\n                            disabled={!(formObject.author && formObject.title)}\r\n                            onClick={handleFormSubmit}\r\n                        >\r\n                            Submit Book\r\n              </FormBtn>\r\n                    </form>\r\n                </Col> */}\r\n                <Col size=\"md-6 sm-12\">\r\n                    <Jumbotron>\r\n                        <h1>Books On My List</h1>\r\n                    </Jumbotron>\r\n                    {books.length ? (\r\n                        <List>\r\n                            {books.map(book => (\r\n                                <ListItem key={book._id}>\r\n                                    <Link to={\"/books/\" + book._id}>\r\n                                        <strong>\r\n                                            {book.title} by {book.author}\r\n                                        </strong>\r\n                                    </Link>\r\n                                    <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    ) : (\r\n                            <h3>No Results to Display</h3>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}